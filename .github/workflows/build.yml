name: Build ZuppiCalling Executable

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Install Chocolatey and Dependencies
    - name: Install Chocolatey and Dependencies
      run: |
        choco install -y msys2 visualstudio2022buildtools
        echo "C:\\tools\\msys64\\usr\\bin" >> $GITHUB_ENV
        echo "C:\\tools\\msys64\\mingw64\\bin" >> $GITHUB_ENV
        echo "C:\\Program Files (x86)\\Microsoft Visual Studio\\2022\\BuildTools\\MSBuild\\Current\\Bin" >> $GITHUB_ENV

    # Step 3: Update MSYS2 and Install Build Tools
    - name: Update MSYS2 and Install Build Tools
      shell: bash
      run: |
        export PATH=/c/tools/msys64/usr/bin:/c/tools/msys64/mingw64/bin:$PATH
        pacman --noconfirm -Syuu
        pacman --noconfirm -S base-devel mingw-w64-x86_64-toolchain mingw-w64-x86_64-cmake mingw-w64-x86_64-jsoncpp mingw-w64-x86_64-pkg-config

    # Step 4: Clean and Clone PJSIP
    - name: Clean and Clone PJSIP
      shell: bash
      run: |
        if [ -d "pjproject" ]; then rm -rf pjproject; fi
        git clone https://github.com/pjsip/pjproject.git
        cd pjproject
        curl -o config.guess https://git.savannah.gnu.org/cgit/config.git/plain/config.guess
        curl -o config.sub https://git.savannah.gnu.org/cgit/config.git/plain/config.sub
        echo "#define PJ_HAS_NETINET_IP_H 0" > pjlib/include/pj/config_site.h
        ./aconfigure \
          --host=x86_64-w64-mingw32 \
          --disable-video --disable-opus --disable-webrtc --disable-samples --disable-resample \
          --disable-g711 --disable-g7221 --disable-gsm \
          CFLAGS="-I/mingw64/include" LDFLAGS="-L/mingw64/lib"
        make dep
        make
        make install

    # Step 5: Configure and Build ZuppiCalling
    - name: Configure and Build ZuppiCalling
      shell: bash
      run: |
        mkdir -p build
        cd build
        cmake -G "Visual Studio 17 2022" -A x64 \
          -DPJSIP_INCLUDE_DIR=../pjproject/pjlib/include \
          -DPJSIP_LIBRARY=../pjproject/pjlib/lib \
          -DJSONCPP_INCLUDE_DIR=/mingw64/include/jsoncpp \
          -DJSONCPP_LIBRARY=/mingw64/lib \
          ..
        cmake --build . --config Release

    # Step 6: Upload Built Executable
    - name: Upload Executable
      uses: actions/upload-artifact@v3
      with:
        name: ZuppiCalling-Executable
        path: build/Release/ZuppiCalling.exe
